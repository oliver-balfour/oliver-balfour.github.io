{"version":3,"sources":["components/navigation.jsx","components/header.jsx","components/features.jsx","components/services.jsx","components/Team.jsx","components/footer.jsx","components/contact.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Navigation","props","id","className","type","data-toggle","data-target","href","src","Header","class","data","title","paragraph","Features","map","d","i","icon","text","initialState","name","email","Services","useState","setState","handleChange","e","target","value","prevState","validate","onSubmit","preventDefault","console","log","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","json","alert","placeholder","required","onChange","Team","members","img","alt","job","Footer","instagram","twitter","tiktok","message","Contact","rows","address","App","SmoothScroll","speed","speedAsDuration","landingPageData","setLandingPageData","useEffect","JsonData","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.f4973a0d.chunk.js","sourcesContent":["export const Navigation = (props) => {\r\n  return (\r\n    <nav id='menu' className='navbar navbar-default navbar-fixed-top'>\r\n      <div className='container'>\r\n        <div className='navbar-header'>\r\n          <button\r\n            type='button'\r\n            className='navbar-toggle collapsed'\r\n            data-toggle='collapse'\r\n            data-target='#bs-example-navbar-collapse-1'\r\n          >\r\n            {' '}\r\n            <span className='sr-only'>Toggle navigation</span>{' '}\r\n            <span className='icon-bar'></span>{' '}\r\n            <span className='icon-bar'></span>{' '}\r\n            <span className='icon-bar'></span>{' '}\r\n          </button>\r\n          <a className='navbar-brand page-scroll' href='#page-top'>\r\n            <img src=\"img/patrocima.png\" className='logo justify-content-start navbar-left'/>\r\n          </a>{' '}\r\n        </div>\r\n\r\n        <div\r\n          className='collapse navbar-collapse'\r\n          id='bs-example-navbar-collapse-1'\r\n        >\r\n          <ul className='nav navbar-nav navbar-right'>\r\n            <li>\r\n              <a href='#features' className='page-scroll'>\r\n                Proceso\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href='#services' className='page-scroll'>\r\n                Invert√≠\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href='#contact' className='page-scroll'>\r\n                Talento\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href='#team' className='page-scroll'>\r\n                Equipo\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n","export const Header = (props) => {\r\n  return (\r\n    <header id='header'>\r\n      <div className='intro'>\r\n        <div className='overlay'>\r\n          <div className='container'>\r\n            <div className='row' id=\"slideshow\">\r\n              <div class=\"elemnt\">\r\n                <div className='col-md-8 col-md-offset-2 intro-text'>\r\n                  <h1>\r\n                    {props.data ? props.data.title : 'Loading'}\r\n                    <span></span>\r\n                  </h1>\r\n                  <p>{props.data ? props.data.paragraph : 'Loading'}</p>\r\n                </div>\r\n              </div>\r\n              <div class=\"elemnt1\">\r\n                <div className='col-md-8 col-md-offset-2 intro-text'>\r\n                  <h1>\r\n                    {props.data ? props.data.title : 'Loading'}\r\n                    <span></span>\r\n                  </h1>\r\n                  <p>{props.data ? props.data.paragraph : 'Loading'}</p>\r\n                </div>\r\n              </div>\r\n              <div class=\"elemnt2\">\r\n                <div className='col-md-8 col-md-offset-2 intro-text'>\r\n                  <h1>\r\n                    {props.data ? props.data.title : 'Loading'}\r\n                    <span></span>\r\n                  </h1>\r\n                  <p>{props.data ? props.data.paragraph : 'Loading'}</p>\r\n                </div>\r\n              </div>\r\n              <div class=\"elemnt3\">\r\n                <div className='col-md-8 col-md-offset-2 intro-text'>\r\n                  <h1>\r\n                    {props.data ? props.data.title : 'Loading'}\r\n                    <span></span>\r\n                  </h1>\r\n                  <p>{props.data ? props.data.paragraph : 'Loading'}</p>\r\n                </div>\r\n              </div>\r\n              <div class=\"elemnt4\">\r\n                <div className='col-md-8 col-md-offset-2 intro-text'>\r\n                  <h1>\r\n                    {props.data ? props.data.title : 'Loading'}\r\n                    <span></span>\r\n                  </h1>\r\n                  <p>{props.data ? props.data.paragraph : 'Loading'}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n","export const Features = (props) => {\r\n  return (\r\n    <div id='features' className='text-center'>\r\n      <div className='container'>\r\n        <div className='col-md-10 col-md-offset-1 section-title'>\r\n          <h2>Proceso</h2>\r\n        </div>\r\n        <div className='row'>\r\n          {props.data\r\n            ? props.data.map((d, i) => (\r\n                <div key={`${d.title}-${i}`} className='col-xs-6 col-md-3'>\r\n                  {' '}\r\n                  <i className={d.icon}></i>\r\n                  <h3>{d.title}</h3>\r\n                  <p>{d.text}</p>\r\n                </div>\r\n              ))\r\n            : 'Loading...'}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { useState } from 'react'\r\n\r\nconst initialState = {\r\n  name: '',\r\n  email: ''\r\n}\r\n\r\nexport const Services = (props) => {\r\n  const [{ name, email}, setState] = useState(initialState)\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target\r\n    setState((prevState) => ({ ...prevState, [name]: value }))\r\n  }\r\n  const clearState = () => setState({ ...initialState })\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    console.log(name, email)\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      headers: { \r\n          'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ name: name , email: email})\r\n    };\r\n    fetch('https://t3dbgp.deta.dev/talent/', requestOptions)\r\n      .then(response => response.json())\r\n      .then(data => alert(\"Formulario enviado\"));\r\n  }\r\n  return (\r\n    <div id='services' className='text-center'>\r\n      <div className='container'>\r\n        <div className='section-title'>\r\n          <h2>Convertite en sponsor</h2>\r\n          <p>\r\n            Sumate a la lista de espera. Suscribite a nuestro newsletter y enterate cuando publiquemos los primeros talentos en Diciembre.\r\n          </p>\r\n        </div>\r\n\r\n        <form name='sentMessage' validate onSubmit={handleSubmit}>\r\n                <div className='row'>\r\n                  <div className='col-md-6'>\r\n                    <div className='form-group'>\r\n                      <input\r\n                        type='text'\r\n                        id='name'\r\n                        name='name'\r\n                        className='form-control'\r\n                        placeholder='Nombre'\r\n                        required\r\n                        onChange={handleChange}\r\n                      />\r\n                      <p className='help-block text-danger'></p>\r\n                    </div>\r\n                  </div>\r\n                  <div className='col-md-6'>\r\n                    <div className='form-group'>\r\n                      <input\r\n                        type='email'\r\n                        id='email'\r\n                        name='email'\r\n                        className='form-control'\r\n                        placeholder='Email'\r\n                        required\r\n                        onChange={handleChange}\r\n                      />\r\n                      <p className='help-block text-danger'></p>\r\n                    </div>\r\n                  </div>\r\n                  <div className='col-md-10'>\r\n                  </div>\r\n                  <button type='submit' className='btn btn-custom col-md-2'>\r\n                  Suscribirme\r\n                  </button>\r\n                </div>\r\n                <div id='success'></div>\r\n              </form>\r\n\r\n        <div className='row'>\r\n          {props.data\r\n            ? props.data.map((d, i) => (\r\n                <div key={`${d.name}-${i}`} className='col-md-4'>\r\n                  {' '}\r\n                  <div className='service-desc'>\r\n                    <h3>{d.name}</h3>\r\n                    <p>{d.text}</p>\r\n                  </div>\r\n                </div>\r\n              ))\r\n            : 'loading'}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","export const Team = (props) => {\r\n  return (\r\n    <div id='team' className='text-center'>\r\n      <div className='container'>\r\n        <div className='col-md-8 col-md-offset-2 section-title'>\r\n          <h2>Conoc√© al equipo</h2>\r\n          <p>\r\n            Buscamos apoyar el talento de la comunidad.\r\n          </p>\r\n        </div>\r\n        <div id='row'>\r\n          {props.data\r\n            ? props.data.members.map((d, i) => (\r\n                <div key={`${d.name}-${i}`} className='col-md-4 col-sm-6 team'>\r\n                  <div className='thumbnail'>\r\n                    {' '}\r\n                    <img src={d.img} alt='...' className='team-img' />\r\n                    <div className='caption'>\r\n                      <h4>{d.name}</h4>\r\n                      <p>{d.job}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))\r\n            : 'loading'}\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n","export const Footer = (props) => {\r\n    return (\r\n      <div id='footer' className='text-center'>\r\n  \r\n        <div className='col-md-12'>\r\n              <div className='row'>\r\n                <div className='social'>\r\n                  <ul>\r\n                    <li>\r\n                      <a href={props.data ? props.data.instagram : '/'}>\r\n                        <i className='fab fa-instagram'></i>\r\n                      </a>\r\n                    </li>\r\n                    <li>\r\n                      <a href={props.data ? props.data.twitter : '/'}>\r\n                        <i className='fab fa-twitter'></i>\r\n                      </a>\r\n                    </li>\r\n                    <li>\r\n                      <a href={props.data ? props.data.tiktok : '/'}>\r\n                        <i className='fab fa-tiktok'></i>\r\n                      </a>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n        </div>\r\n  \r\n  \r\n        <div id='footer'>\r\n          <div className='container text-center'>\r\n            <p>\r\n              &copy; 2022 patrocima\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }","import { useState } from 'react'\r\n\r\nconst initialState = {\r\n  name: '',\r\n  email: '',\r\n  message: '',\r\n}\r\nexport const Contact = (props) => {\r\n  const [{ name, email, message }, setState] = useState(initialState)\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target\r\n    setState((prevState) => ({ ...prevState, [name]: value }))\r\n  }\r\n  const clearState = () => setState({ ...initialState })\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    console.log(name, email, message)\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      headers: { \r\n          'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ name: name , email: email, message: message})\r\n    };\r\n    fetch('https://t3dbgp.deta.dev/newsletter/', requestOptions)\r\n      .then(response => response.json())\r\n      .then(data => alert(\"Formulario enviado\"));\r\n  }\r\n  return (\r\n    <div>\r\n      <div id='contact'>\r\n        <div className='container'>\r\n          <div className='col-md-8'>\r\n            <div className='row'>\r\n              <div className='section-title'>\r\n                <h2>¬øTen√©s alg√∫n talento y necesitas apoyo econ√≥mico?</h2>\r\n                <p>\r\n                  Mandanos un mensaje y te vamos a estar contactando a la brevedad para asesorarte sobre el sistema de acuerdos.\r\n                </p>\r\n              </div>\r\n              <form name='sentMessage' validate onSubmit={handleSubmit}>\r\n                <div className='row'>\r\n                  <div className='col-md-6'>\r\n                    <div className='form-group'>\r\n                      <input\r\n                        type='text'\r\n                        id='name'\r\n                        name='name'\r\n                        className='form-control'\r\n                        placeholder='Nombre'\r\n                        required\r\n                        onChange={handleChange}\r\n                      />\r\n                      <p className='help-block text-danger'></p>\r\n                    </div>\r\n                  </div>\r\n                  <div className='col-md-6'>\r\n                    <div className='form-group'>\r\n                      <input\r\n                        type='email'\r\n                        id='email'\r\n                        name='email'\r\n                        className='form-control'\r\n                        placeholder='Email'\r\n                        required\r\n                        onChange={handleChange}\r\n                      />\r\n                      <p className='help-block text-danger'></p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className='form-group'>\r\n                  <textarea\r\n                    name='message'\r\n                    id='message'\r\n                    className='form-control'\r\n                    rows='4'\r\n                    placeholder='Cont√° tu historia'\r\n                    required\r\n                    onChange={handleChange}\r\n                  ></textarea>\r\n                  <p className='help-block text-danger'></p>\r\n                </div>\r\n                <div id='success'></div>\r\n                <button type='submit' className='btn btn-custom btn-lg'>\r\n                  Enviar mensaje\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n          <div className='col-md-3 col-md-offset-1 contact-info'>\r\n            <div className='contact-item'>\r\n              <h3>Informaci√≥n de contacto</h3>\r\n              <p>\r\n                <span>\r\n                  <i className='fa fa-map-marker'></i> Direcci√≥n\r\n                </span>\r\n                {props.data ? props.data.address : 'loading'}\r\n              </p>\r\n            </div>\r\n            <div className='contact-item'>\r\n              <p>\r\n                <span>\r\n                  <i className='fa fa-envelope'></i> Email\r\n                </span>{' '}\r\n                {props.data ? props.data.email : 'loading'}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { Navigation } from \"./components/navigation\";\r\nimport { Header } from \"./components/header\";\r\nimport { Features } from \"./components/features\";\r\nimport { About } from \"./components/about\";\r\nimport { Services } from \"./components/services\";\r\nimport { Gallery } from \"./components/gallery\";\r\nimport { Testimonials } from \"./components/testimonials\";\r\nimport { Team } from \"./components/Team\";\r\nimport { Footer } from \"./components/footer\";\r\nimport { Contact } from \"./components/contact\";\r\nimport JsonData from \"./data/data.json\";\r\nimport SmoothScroll from \"smooth-scroll\";\r\nimport \"./App.css\";\r\n\r\nexport const scroll = new SmoothScroll('a[href*=\"#\"]', {\r\n  speed: 1000,\r\n  speedAsDuration: true,\r\n});\r\n\r\nconst App = () => {\r\n  const [landingPageData, setLandingPageData] = useState({});\r\n  useEffect(() => {\r\n    setLandingPageData(JsonData);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Navigation />\r\n      <Header data={landingPageData.Header} />\r\n      <Features data={landingPageData.Features} />\r\n      <Services data={landingPageData.Services}/>\r\n      <Contact data={landingPageData.Contact} />\r\n      <Team data={landingPageData.Team} />\r\n      <Footer data={landingPageData.Footer} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}